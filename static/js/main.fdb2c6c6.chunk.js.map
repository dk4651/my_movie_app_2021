{"version":3,"sources":["ShowMovie.js","App.js","reportWebVitals.js","index.js"],"names":["ShowMovie","title","img","summary","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","Moviedata","GetData","a","axios","get","Movieurl","console","log","setState","data","movies","this","list","medium_cover_image","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTA0BeA,MAtBf,YAA+C,IAA3BC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,IAAIC,EAAgB,EAAhBA,QAAQC,EAAQ,EAARA,OAEtC,OACI,sBAAKC,UAAY,QAAjB,UACI,qBAAKC,IAAOJ,EAAKK,IAAON,EAAOA,MAASA,IACxC,sBAAKI,UAAY,cAAjB,UACI,oBAAIA,UAAY,eAAhB,SAAgCJ,IAChC,oBAAII,UAAY,gBAAhB,SACKD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACZ,oBAAgBL,UAAW,gBAA3B,SACKI,GADIC,QAKb,oBAAGL,UAAY,iBAAf,UAAiCF,EAAQQ,MAAM,EAAE,KAAjD,gBCqJGC,E,4MA3JbC,MAAQ,CACNC,WAAY,EACZC,UAAW,I,EAEfC,Q,sBAAU,4BAAAC,EAAA,sEACeC,IAAMC,IAAI,0CADzB,OACFC,EADE,OAERC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAACR,UAAYK,EAASI,KAAKA,KAAKC,OAAQX,WAAU,IAChEO,QAAQC,IAAI,EAAKT,MAAME,WAJf,2C,uDAQR,WACEW,KAAKV,Y,oBAcP,WAEE,OACE,yBAASX,UAAY,YAArB,SACGqB,KAAKb,MAAMC,UACZ,qBAAKT,UAAU,SAAf,SACGqB,KAAKb,MAAME,UAAUP,KAAI,SAAAmB,GAAI,OAC7B,cAAC,EAAD,CAED1B,MAAS0B,EAAK1B,MACdC,IAAOyB,EAAKC,mBACZzB,QAAWwB,EAAKxB,QAChBC,OAAUuB,EAAKvB,QAJRuB,EAAKE,SASd,qBAAKxB,UAAY,SAAjB,SACE,sBAAMA,UAAY,eAAlB,gC,GA9CQyB,IAAMC,WCCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fdb2c6c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ShowMovie.css';\r\n\r\n\r\nfunction ShowMovie({title,img,summary,genres}){\r\n\r\nreturn(    \r\n    <div className = 'movie'>\r\n        <img src = {img} alt = {title} title = {title}></img>\r\n        <div className = 'movie__data'>\r\n            <h3 className = 'movie__title'>{title}</h3>\r\n            <ul className = 'movie__genres'>\r\n                {genres.map((genre,index) => (\r\n                <li key={index} className ='genres__genre'>\r\n                    {genre}\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            <p className = 'movie__summary'>{summary.slice(0,180)}...</p>  \r\n        </div>    \r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ShowMovie;","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport reactDom from 'react-dom';\nimport axios from 'axios';\nimport ShowMovie from './ShowMovie';\nimport './App.css';\n\n\n//세 번째 예시 만들기 \n//영화 소개 사이트를 만들어라 \nclass App extends React.Component{\n  state = {\n    isLoading : false ,\n    Moviedata: []\n  };\nGetData = async() => {\n  const Movieurl = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n  console.log(Movieurl);\n  this.setState({Moviedata : Movieurl.data.data.movies, isLoading:true});\n  console.log(this.state.Moviedata);\n\n\n}\n  componentDidMount(){\n    this.GetData();\n    /*setTimeout(()=>{\n      this.setState({isLoading : true});\n    },6000);*/\n\n    /*const GetData = async() => {\n      try {\n        const url = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n      } catch (error) {\n  }\n  }\n  GetData();*/\n}\n\n  render(){\n\n    return(\n      <section className = 'container'>\n        {this.state.isLoading ? \n        <div className='movies'>\n          {this.state.Moviedata.map(list =>\n          (<ShowMovie \n          key = {list.id} \n          title = {list.title} \n          img = {list.medium_cover_image} \n          summary = {list.summary} \n          genres = {list.genres}\n          />\n          ))}\n        </div>\n        : \n        <div className = 'loader'>\n          <span className = 'loader__text'>Loading...</span>\n        </div>\n        } \n      </section>\n    )\n\n  }\n}\n\n\n//세 번째 예시 만들기 \n\n\n//두 번째 예시 만들기 \n//버튼을 눌러서 숫자를 증/감시키기 \n\n// class App extends React.Component{\n//   state = {\n//     count : 0\n\n//   };\n//   Add = () => {\n//     this.setState({count: this.state.count + 1})\n//   };\n//   Minus = () => {\n//     this.setState({count: this.state.count - 1})\n//   };\n//   Reset = () =>{\n//     this.setState({count: this.state.count = 0})\n//   };\n//   render(){\n//     return(\n  \n//     <div>\n//       <p>\n//         <h1>Current Number is : {this.state.count}</h1>\n//       </p>\n//       &nbsp;&nbsp;\n//       <button onClick = {this.Add}> Plus </button>\n//       &nbsp;&nbsp;\n//       <button onClick ={this.Minus}> Minus </button>\n//       &nbsp;&nbsp;\n//       <button onClick ={this.Reset}> Reset </button>\n//     </div>\n//     )\n\n//   }\n// }\n\n//두 번째 예시 만들기 \n\n\n\n// 첫 예시 만들기\n// 좋아하는 음식을 나열한다 \n  // const FoodILike = [\n  //   {\n  //     id : 1,\n  //     name : \"Kimchi\",\n  //     image : \"https://kelliesfoodtoglow.com/wp-content/uploads/2016/10/kimchi1.jpg\",\n  //     rating : 5\n  //   },\n  //   {\n  //     id : 2,\n  //     name : \"samgeopsal\",\n  //     image : \"http://static.news.zumst.com/images/2/2017/02/26/2030c76e427f4c278c16ab0eb81bd45d.jpg\",\n  //     rating : 4.9\n  //   },\n  //   {\n  //     id : 3,\n  //     name : \"chicken\",\n  //     image : \"http://www.ckhero.co.kr/new/theme/basic/img/main_quick_menu7.png\",\n  //     rating : 4.7\n  //   }]\n\n  // function Food({name, image,rate}){\n  // //  console.log(props);\n  //   return(\n  //     <div>\n  //       <h2>I like {name}</h2>\n  //       <h4>{rate}/5.0</h4>\n  //       <img src= {image} width = '450' alt = {image}></img>\n\n  //     </div>\n  //   )\n        \n  // }\n\n  // Food.propTypes = {\n\n  //   name : PropTypes.string.isRequired\n  // };\n\n    \n  // function App() {\n  //   return (\n  \n  //     <div>\n  //       <h1>My Favorite Food List</h1>\n  //       {FoodILike.map(dish => (\n  //       <Food \n  //       key = {dish.id} \n  //       name = {dish.name} \n  //       image = {dish.image}\n  //       rate = {dish.rating}/>))}\n  //     </div>\n  //   )\n  // }\n// 첫 예시 만들기\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}